{"version":3,"sources":["Quadtree/Methods/rectangle.js","Quadtree/Canvas/methods.js","Quadtree/Methods/quadtreeConcrete.js","Quadtree/Quadtree.js","App.js","reportWebVitals.js","index.js"],"names":["Rectangle","x","y","w","h","this","point","range","resetCanvas","canvas","document","getElementById","context","getContext","clearRect","width","height","beginPath","fillStyle","fillRect","stroke","innerHTML","getMousePos","evt","rect","getBoundingClientRect","clientX","left","clientY","top","createPoint","QuadtreeConcrete","boundary","capacity","points","isDivided","insertFather","i","length","contains","insert","push","subdivide","northeast","northwest","southeast","southwest","nw","ne","sw","se","deletePointsIfSplit","found","intersects","query","strokeStyle","draw","arc","Math","PI","fill","PrettoSlider","withStyles","root","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","background","track","borderRadius","rail","Slider","CANVAS_WIDTH","CANVAS_HEIGHT","Quadtree","props","intervalID","state","drawMode","pointsInSquareCount","mouseDown","qtree","addRandomPoints","stopADDRandomPoints","setState","pointsInSquare","e","onClickEvent","newPoints","pos","posX","floor","posY","newPoint","drawPointOnClick","classMode","setInterval","random","clearInterval","lineWidth","drawSearchArea","val","className","Button","variant","onClick","reset","id","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleCapacityChange","onMouseDown","setsMouseIsDown","onMouseUp","onMouseMove","drawPointOnMove","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.758e3187.chunk.js","sourcesContent":["/*\r\nThise File Builds a Rectangle (Node) for the Quadtree\r\n*/\r\nexport default class Rectangle{\r\n    constructor(x,y,w,h) {\r\n        this.x=x;\r\n        this.y=y;\r\n        this.w=w;\r\n        this.h=h;\r\n    }\r\n\r\n    //Check if a point is Inside the rectangle\r\n    contains(point){\r\n        return (point.x >= this.x - this.w &&\r\n            point.x <= this.x + this.w &&\r\n            point.y >= this.y - this.h &&\r\n            point.y <= this.y + this.h\r\n            );\r\n    }\r\n\r\n    //Check if a Rectangle(Range) intersects with this rectangle\r\n    intersects(range){\r\n        return !(range.x - range.w > this.x + this.w\r\n            || range.x + range.w < this.x - this.w\r\n            || range.y - range.h > this.y + this.h\r\n            || range.y + range.h < this.y - this.h\r\n            );\r\n    }\r\n}","import Rectangle from \"../Methods/rectangle\";\r\n\r\n//Const Canvas Width and Heights\r\nconst CANVAS_WIDTH=800;\r\nconst CANVAS_HEIGHT=400;\r\n\r\n//Resets the Canvas to the initial state\r\nexport function resetCanvas(){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.clearRect(0,0,canvas.width,canvas.height);\r\n    context.beginPath();\r\n    context.fillStyle = \"#2F4F4F\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n    var label = document.getElementById(\"points_in_square\");\r\n    label.innerHTML=\"Point In Square: \"+0;\r\n}\r\n\r\n//Draws a Point to the Canvas where it was clicked and adds it to the points array\r\nexport function drawPointOnClick(e, points){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    var pos = getMousePos(canvas, e);\r\n    let posX = Math.floor(pos.x);\r\n    let posY = Math.floor(pos.y);\r\n    context.fillStyle =\"red\";\r\n    context.beginPath();\r\n    context.arc(posX, posY, 2, 0, 2*Math.PI);\r\n    context.fill();\r\n    var newPoint=createPoint(posX,posY);\r\n    points.push(newPoint);\r\n    return points;\r\n}\r\n\r\n//Draws the Search Area and highlight the Points inside the area\r\nexport function drawSearchArea(e, qtree){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    var pos = getMousePos(canvas, e);\r\n    resetCanvas();      \r\n    qtree.draw();\r\n    context.beginPath();\r\n    context.strokeStyle=\"yellow\";\r\n    context.lineWidth=3;\r\n    context.rect(pos.x-50,pos.y-50,100,100); \r\n    let range = new Rectangle(pos.x,pos.y,50,50);\r\n    let points = [];\r\n    qtree.query(range, points);\r\n    var label = document.getElementById(\"points_in_square\");\r\n    label.innerHTML=\"Point In Square: \"+points.length;\r\n    context.stroke();\r\n    context.lineWidth=1;\r\n    for(let i=0;i<points.length;i++){\r\n        context.beginPath();\r\n        context.fillStyle=\"yellow\";\r\n        context.arc(points[i].x, points[i].y, 4, 0, 2*Math.PI);\r\n        context.fill();\r\n    }  \r\n}\r\n\r\n//Gets the Mouse position on the Canvas\r\nfunction getMousePos(canvas, evt) {\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top\r\n    };\r\n}\r\n\r\n//Creates a new Point with x,y,label for the array points\r\nconst createPoint=(x,y)=>{\r\n    return {\r\n        x:x,\r\n        y:y,\r\n    };\r\n}\r\n\r\n","/*\r\nThise File Builds a Quadtree and handles querys\r\n*/\r\nimport Rectangle from \"./rectangle\";\r\nexport default class QuadtreeConcrete{\r\n    constructor(boundary, capacity, points=null) {\r\n        this.boundary=boundary;\r\n        this.capacity=capacity;\r\n        this.points=[]\r\n        this.isDivided=false;\r\n        if(points)\r\n        this.insertFather(points);\r\n    }\r\n\r\n    insertFather(points){\r\n        for(let i=0;i<points.length;i++){\r\n            if(this.boundary.contains(points[i]))\r\n            this.insert(points[i]);\r\n        }\r\n    }\r\n\r\n    deletePointsIfSplit(){\r\n        if(this.isDivided) this.points=[];\r\n    }\r\n\r\n    //Insert a Point in the Quadtree\r\n    insert(point){\r\n        if(!this.boundary.contains(point)){\r\n            return false;\r\n        } \r\n        if(this.points.length<this.capacity && !this.isDivided){\r\n            this.points.push(point);\r\n            return true;\r\n        } else {\r\n            if(!this.isDivided){\r\n                this.subdivide();\r\n            }\r\n            \r\n            if(this.northeast.insert(point)){\r\n                return true;\r\n            } else if(this.northwest.insert(point)){\r\n                return true;\r\n            } else if(this.southeast.insert(point)){\r\n                return true;\r\n            } else if(this.southwest.insert(point)){\r\n                return true;\r\n            }         \r\n        }\r\n    }\r\n\r\n    //Subdivide a Node in the Quadtree if the capacity of a node is reached\r\n    subdivide(){\r\n        let x = this.boundary.x;\r\n        let y = this.boundary.y;\r\n        let w = this.boundary.w;\r\n        let h = this.boundary.h;\r\n        let nw = new Rectangle(x-w/2,y-h/2,w/2,h/2);\r\n        this.northwest = new QuadtreeConcrete(nw,this.capacity, this.points);\r\n        let ne = new Rectangle(x+w/2,y-h/2,w/2,h/2);\r\n        this.northeast = new QuadtreeConcrete(ne,this.capacity, this.points);\r\n        let sw = new Rectangle(x-w/2,y+h/2,w/2,h/2);\r\n        this.southwest = new QuadtreeConcrete(sw, this.capacity, this.points);\r\n        let se = new Rectangle(x+w/2,y+h/2,w/2,h/2);\r\n        this.southeast = new QuadtreeConcrete(se,this.capacity, this.points);\r\n        this.isDivided=true;\r\n        this.deletePointsIfSplit();\r\n    }\r\n    \r\n    //Search for Points in the range\r\n    query(range, found){\r\n        if(!this.boundary.intersects(range)){\r\n            //empty array\r\n            return;\r\n        } else {\r\n            for(let i=0;i<this.points.length;i++){\r\n                if(range.contains(this.points[i])){\r\n                    found.push(this.points[i]);\r\n                }\r\n            }\r\n        }\r\n        //Recursive ask the children to search for points in range\r\n        if(this.isDivided){\r\n            this.northwest.query(range, found);\r\n            this.northeast.query(range, found);\r\n            this.southwest.query(range, found);\r\n            this.southeast.query(range, found);\r\n        }\r\n    }\r\n\r\n    //Draw the Boarder of a Node and the points in it\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.strokeStyle=\"white\";\r\n        context.rect(this.boundary.x-this.boundary.w,this.boundary.y-this.boundary.h,this.boundary.w*2,this.boundary.h*2);       \r\n        context.stroke();\r\n        //Draw recursive the children\r\n        if(this.isDivided){\r\n            this.northeast.draw();\r\n            this.northwest.draw();\r\n            this.southeast.draw();\r\n            this.southwest.draw();\r\n        }\r\n        //Draw Points in Boarder\r\n        for(let i=0;i<this.points.length;i++){\r\n            context.beginPath();\r\n            context.fillStyle=\"red\";\r\n            context.arc(this.points[i].x, this.points[i].y, 2, 0, 2*Math.PI);\r\n            context.fill();\r\n        }\r\n}\r\n}","import React from 'react';\r\nimport \"./Quadtree.css\";\r\nimport {resetCanvas, drawPointOnClick, drawSearchArea} from \"./Canvas/methods\";\r\nimport Rectangle from \"./Methods/rectangle\";\r\nimport QuadtreeConcrete from \"./Methods/quadtreeConcrete\";\r\nimport {Button, Slider} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n /**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'red',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\n//Constants Canvas \"2dplane\"\r\nconst CANVAS_WIDTH=800;\r\nconst CANVAS_HEIGHT=400;\r\nconst CAPACITY_DEFAULT=4;\r\nconst DRAW_MODE_ON_CLICK=0;\r\nconst DRAW_MODE_ON_SEARCH=1;\r\nconst DRAW_MODE_NONE=-1;\r\n\r\nexport default class Quadtree extends React.Component{\r\n    intervalID=0;//Intervall for Add random points in Quadtree\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            drawMode:DRAW_MODE_ON_CLICK,//0 Points on Click, 1 Points on Move, 2 Draw Seach Area\r\n            points: [],\r\n            pointsInSquareCount:0,\r\n            capacity:CAPACITY_DEFAULT,\r\n            query:false,\r\n            mouseDown: false,\r\n            qtree:new QuadtreeConcrete(new Rectangle(CANVAS_WIDTH/2,CANVAS_HEIGHT/2,CANVAS_WIDTH/2,CANVAS_HEIGHT/2), CAPACITY_DEFAULT),\r\n            addRandomPoints:true,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){ \r\n        resetCanvas();\r\n    }\r\n\r\n    //Resets the Canvas and the Quadtree\r\n    reset(){\r\n        resetCanvas();\r\n        this.stopADDRandomPoints();\r\n        this.setState({addRandomPoints:true,drawMode:0,pointsInSquare:[], points:[], qtree: new QuadtreeConcrete(new Rectangle(CANVAS_WIDTH/2,CANVAS_HEIGHT/2,CANVAS_WIDTH/2,CANVAS_HEIGHT/2), this.state.capacity)});   \r\n    }\r\n\r\n    //Draws a point on Canvas \"2dplane\" and save it in the array points\r\n    drawPointOnMove(e){\r\n      if(!this.state.mouseDown){\r\n        return;\r\n      }\r\n        this.onClickEvent(e);\r\n    }\r\n\r\n    //Draws a point on Canvas \"2dplane\" and save it in the array points\r\n    onClickEvent(e){\r\n      let newPoints = drawPointOnClick(e,this.state.points, this.state.classMode);\r\n      this.setState({points: newPoints});\r\n      let qtree = this.state.qtree;\r\n      qtree.insert(newPoints[newPoints.length-1]);\r\n      this.setState({qtree:qtree});\r\n      resetCanvas();\r\n      qtree.draw();\r\n    }\r\n\r\n    //Sets the Variable on Mouse Down to true/ Mouse UP to false\r\n    setsMouseIsDown(){\r\n        this.setState({mouseDown: !this.state.mouseDown})\r\n    }\r\n\r\n    //Add random Points\r\n    addRandomPoints(){\r\n        this.setState({addRandomPoints:false, drawMode: DRAW_MODE_NONE});\r\n        let qtree = this.state.qtree;\r\n        let points = this.state.points;\r\n        this.intervalID = setInterval(() => {         \r\n            let newPoint = createPoint(Math.floor(Math.random()*CANVAS_WIDTH),Math.floor(Math.random()*CANVAS_HEIGHT));\r\n            qtree.insert(newPoint);\r\n            points.push(newPoint);\r\n            this.setState({points:points, qtree: qtree});\r\n            resetCanvas();\r\n            qtree.draw();\r\n            if(this.state.addRandomPoints) this.stopADDRandomPoints();\r\n        },200);\r\n    }\r\n\r\n    //Stops the \"Visual\" Training\r\n    stopADDRandomPoints(){\r\n        this.setState({addRandomPoints:true});\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    //Draw the Search Area for the Quadtree\r\n    drawSearchArea(e){\r\n        drawSearchArea(e,this.state.qtree);\r\n    }\r\n\r\n    //handles the Capacity Change and reconstruct the quadtree\r\n    handleCapacityChange(e, val){\r\n        this.setState({capacity : val, addRandomPoints:true})\r\n        resetCanvas();\r\n        let qtree = new QuadtreeConcrete(new Rectangle(CANVAS_WIDTH/2,CANVAS_HEIGHT/2,CANVAS_WIDTH/2,CANVAS_HEIGHT/2), val);\r\n        let points = this.state.points;\r\n        for(let i=0;i<points.length;i++){\r\n            qtree.insert(points[i]);\r\n        }\r\n        qtree.draw();\r\n        this.setState({qtree: qtree});\r\n    }\r\n\r\n    render(){\r\n        const {drawMode, points, pointsInSquareCount, addRandomPoints} = this.state;\r\n        return(\r\n            <div className=\"quadtree\">\r\n                <h1>Quadtree</h1>\r\n                <Button color={!addRandomPoints ? \"primary\":\"default\"} variant=\"contained\" onClick={addRandomPoints? () => this.addRandomPoints():() => this.stopADDRandomPoints()}>Draw Random Point</Button>\r\n                <Button color={drawMode===DRAW_MODE_ON_CLICK ? \"primary\":\"default\"} variant=\"contained\" onClick={() => {this.setState({drawMode: DRAW_MODE_ON_CLICK, addRandomPoints:true})}}>Draw Points Click</Button>\r\n                <Button color={drawMode===DRAW_MODE_ON_SEARCH ? \"primary\":\"default\"} variant=\"contained\" onClick={() => {this.setState({drawMode: DRAW_MODE_ON_SEARCH, addRandomPoints:true})}}>Search Area</Button>\r\n                <Button variant=\"contained\" onClick={() => this.reset()}>Reset</Button>\r\n                <div className=\"quadtree__labels\">\r\n                    <h4>Point Count: {points.length}</h4>\r\n                    <h4 id=\"points_in_square\">Point In Square: {pointsInSquareCount}</h4>\r\n                    <div className=\"quadtree__labels__slider\">\r\n                    <h4>Capacity Rectangle:</h4>\r\n                        <PrettoSlider className=\"slider\" valueLabelDisplay=\"on\" aria-label=\"pretto slider\" defaultValue={CAPACITY_DEFAULT} min={2} max={20} step={1}\r\n                        onChange={(e, val) => this.handleCapacityChange(e, val)}  \r\n                        />\r\n                    </div>\r\n                </div>\r\n                <canvas className=\"quadtree__canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                  onMouseDown={()=> this.setsMouseIsDown()}\r\n                  onMouseUp={()=> this.setsMouseIsDown()}\r\n                  onMouseMove={drawMode===DRAW_MODE_ON_CLICK?(e) => this.drawPointOnMove(e):(e) => this.drawSearchArea(e)}\r\n                  onClick={(e) => this.onClickEvent(e)}\r\n                ></canvas>               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Creates a new Point with x,y,label for the array points\r\nconst createPoint=(x,y)=>{\r\n    return {\r\n        x:x,\r\n        y:y,\r\n    };\r\n}\r\n\r\n/**\r\n *                  <canvas className=\"quadtree__canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                        onClick={ (e) => this.drawPointOnClick(e)}\r\n                    ></canvas>\r\n */\r\n","import './App.css';\nimport Quadtree from \"./Quadtree/Quadtree\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Quadtree></Quadtree>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}